package com.weidi.chat;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.jivesoftware.smack.util.StringUtils;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.Message;
import android.support.v4.content.LocalBroadcastManager;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.EdgeEffect;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.weidi.R;
import com.weidi.activity.FriendActivity;
import com.weidi.chat.groupchat.CreatChatRoomActivity;
import com.weidi.common.CommonAdapter;
import com.weidi.common.ViewHolder;
import com.weidi.common.base.BaseActivity;
import com.weidi.common.image.ImgConfig;
import com.weidi.provider.ObtainMUCInfoIQ;
import com.weidi.provider.ObtainMUCmemberIQ;
import com.weidi.provider.ObtainMUCmemberIQ.Item;
import com.weidi.util.Const;
import com.weidi.util.Logger;
import com.weidi.util.XmppUtil;
import com.weidi.view.ExpandGridView;

/**
 * @author luochangdong E-mail: 2270333671@qq.com
 * @date 创建时间：2015-7-9 下午2:36:29
 * @Description 1.0
 */
public class GroupChatSettingActi extends BaseActivity implements
		OnClickListener {

	public static final String GROUP_MENBER_LIST = "group_menber_list";
	public static final String MUC_INFO = "muc_info";
	private static String TAG = "GroupChatSettingActi";
	private TextView tvMucNick,tvMyNick;
	// 成员总数
	int m_total = 0;
	// 成员列表
	private ExpandGridView gvMenberHead;
	// 修改群名称、置顶
	private RelativeLayout re_change_groupname;
	private RelativeLayout rl_switch_chattotop;
	private RelativeLayout rl_switch_block_groupmsg;
	private RelativeLayout re_clear;

	// 状态变化
	private ImageView iv_switch_chattotop, iv_switch_unchattotop,
			iv_switch_block_groupmsg, iv_switch_unblock_groupmsg;
	private ImageView ivBack;

	// 删除并退出

	private Button exitBtn;
	private String I;
	private String YOU;
	// 群名称
	private String group_name;
	private String groupId;
	// 是否是管理员
	boolean isAdmin = false;
	List<ObtainMUCmemberIQ.Item> existMenbers;
	String longClickUsername = null;
	private CommonAdapter<ObtainMUCmemberIQ.Item> adapter;
	private ProgressDialog progressDialog;
	private boolean isInDeleteMode = false;
	List<ObtainMUCmemberIQ.Item> menberList;
   private ObtainMUCInfoIQ mucInfo;

	@Override
	protected void initView(Bundle savedInstanceState) {
		setContentView(R.layout.social_groupchatsetting_activity);
		YOU = getIntent().getStringExtra(Const.YOU);
		I = Const.USER_NAME;
		menberList = new ArrayList<ObtainMUCmemberIQ.Item>();
		mucInfo = new ObtainMUCInfoIQ();
		existMenbers = new ArrayList<ObtainMUCmemberIQ.Item>();
		initView();
		initBroadcast();
		
		ChatGroupOrder.getInstance().obtainMUCGetmember(
				XmppUtil.getFullMUC(YOU));
		
	}

	private void initBroadcast() {
		mLocalBroadcastManager = LocalBroadcastManager.getInstance(mContext);
		mReceiver = new BroadcastReceiver() {

			@Override
			public void onReceive(Context context, Intent intent) {
				handleBroadcast(intent);
			}

			private void handleBroadcast(Intent intent) {
				if(intent.getAction().equals(GROUP_MENBER_LIST)){
					handleMenbers(intent);
					ChatGroupOrder.getInstance().obtainMUCInfo(XmppUtil.getFullMUC(YOU));
				}
				if(intent.getAction().equals(MUC_INFO)){
					mucInfo =  (ObtainMUCInfoIQ) intent.getSerializableExtra(MUC_INFO);
				}

			}

			private void handleMenbers(Intent intent) {
				menberList = ((ObtainMUCmemberIQ) intent
						.getSerializableExtra(GROUP_MENBER_LIST)).getItems();

				Logger.i(TAG, "" + menberList.size());
				for (ObtainMUCmemberIQ.Item item : menberList) {
					if (StringUtils.parseName(item.getJid()).equals(
							Const.USER_NAME)) {
						if (item.getAffiliation().equals(Const.Lord)) {
							isAdmin = true;// 群主
							menberList.remove(item);
							existMenbers = menberList;
							menberList.add(0, item);
						} else {
							isAdmin = false;
						}
					}
				}
				menberList.add(new Item());
				menberList.add(new Item());
				Logger.i(TAG, "" + menberList.size());
				adapter.clear();
				adapter.addAll(menberList);
			}
		};
		mLocalBroadcastManager.registerReceiver(mReceiver, new IntentFilter(
				GROUP_MENBER_LIST));
	}

	@Override
	protected void setListener() {

		re_change_groupname.setOnClickListener(this);
		rl_switch_chattotop.setOnClickListener(this);
		rl_switch_block_groupmsg.setOnClickListener(this);

		re_clear.setOnClickListener(this);
		exitBtn.setOnClickListener(this);
		ivBack.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				finish();
			}
		});

	}

	@Override
	protected void afterViews(Bundle savedInstanceState) {
		// TODO Auto-generated method stub

	}

	@Override
	protected void handleMsg(Message msg) {
		// TODO Auto-generated method stub

	}

	private void initData(){
		tvMucNick.setText(mucInfo.getName());
		
		
	}
	@SuppressLint("ClickableViewAccessibility")
	private void initView() {

		progressDialog = new ProgressDialog(this);
		tvMucNick = (TextView) findViewById(R.id.tv_groupname);
		tvMyNick = (TextView) findViewById(R.id.tvMyNick);
		gvMenberHead = (ExpandGridView) findViewById(R.id.gridview);

		re_change_groupname = (RelativeLayout) findViewById(R.id.re_change_groupname);
		rl_switch_chattotop = (RelativeLayout) findViewById(R.id.rl_switch_chattotop);
		rl_switch_block_groupmsg = (RelativeLayout) findViewById(R.id.rl_switch_block_groupmsg);
		re_clear = (RelativeLayout) findViewById(R.id.re_clear);

		iv_switch_chattotop = (ImageView) findViewById(R.id.iv_switch_chattotop);
		iv_switch_unchattotop = (ImageView) findViewById(R.id.iv_switch_unchattotop);
		iv_switch_block_groupmsg = (ImageView) findViewById(R.id.iv_switch_block_groupmsg);
		iv_switch_unblock_groupmsg = (ImageView) findViewById(R.id.iv_switch_unblock_groupmsg);
		exitBtn = (Button) findViewById(R.id.btn_exit_grp);
		ivBack = (ImageView) findViewById(R.id.ivBack);
		initAdapter();
		// 退出删除模式
		gvMenberHead.setOnTouchListener(new OnTouchListener() {

			@Override
			public boolean onTouch(View v, MotionEvent event) {
				switch (event.getAction()) {
				case MotionEvent.ACTION_DOWN:
					if (isInDeleteMode) {
						isInDeleteMode = false;
						adapter.notifyDataSetChanged();
						return true;
					}
					break;
				default:
					break;
				}
				return false;
			}
		});
		gvMenberHead.setAdapter(adapter);

	}

	private void initAdapter() {
		adapter = new CommonAdapter<ObtainMUCmemberIQ.Item>(this, menberList,
				R.layout.social_chatsetting_gridview_item) {

			@Override
			public void convert(ViewHolder helper,
					final ObtainMUCmemberIQ.Item item) {
				final ImageView ivAvatar = (ImageView) helper
						.getView(R.id.iv_avatar);
				TextView tv_username = helper.getView(R.id.tv_username);
				final ImageView delPerson = (ImageView) helper
						.getView(R.id.badge_delete);

				int position = helper.getPosition();
				View convertView = helper.getConvertView();
				if (position == getCount() - 1) {
					tv_username.setText("");
					if (isAdmin) {
						hideView(convertView);
						ivAvatar.setImageResource(R.drawable.icon_btn_deleteperson);
						ivAvatar.setOnClickListener(new OnClickListener() {
							@Override
							public void onClick(View v) {
								isInDeleteMode = true;
								notifyDataSetChanged();
							}
						});
					}
				} else if (position == getCount() - 2) {
					tv_username.setText("");
					hideView(convertView);
					ivAvatar.setImageResource(R.drawable.icon_btn_addperson);
					ivAvatar.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {
							Intent intent = new Intent(mContext,
									CreatChatRoomActivity.class);
							Bundle bundle = new Bundle();
							bundle.putSerializable(GROUP_MENBER_LIST, (Serializable) existMenbers);
							intent.putExtras(bundle);
							mContext.startActivity(intent);
						}
					});
				} else {
					if (isInDeleteMode) {
						delPerson.setVisibility(View.VISIBLE);
					} else {
						delPerson.setVisibility(View.GONE);
					}

					ImgConfig.showHeadImg(StringUtils.parseName(item.getJid()),
							ivAvatar);
					tv_username.setText(item.getNick());
					ivAvatar.setOnClickListener(new OnClickListener() {

						@Override
						public void onClick(View v) {
							Intent intent = new Intent(mContext,
									FriendActivity.class);
							intent.putExtra(Const.YOU,
									StringUtils.parseName(item.getJid()));
							mContext.startActivity(intent);
						}
					});
				}

			}

			private void hideView(View convertView) {
				if (isInDeleteMode) {
					// 正处于删除模式下，隐藏删除按钮
					convertView.setVisibility(View.GONE);
				} else {
					convertView.setVisibility(View.VISIBLE);
				}
			}
		};
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.rl_switch_block_groupmsg: // 屏蔽群组
			if (iv_switch_block_groupmsg.getVisibility() == View.VISIBLE) {
				iv_switch_block_groupmsg.setVisibility(View.INVISIBLE);
				iv_switch_unblock_groupmsg.setVisibility(View.VISIBLE);

			} else {

				iv_switch_block_groupmsg.setVisibility(View.VISIBLE);
				iv_switch_unblock_groupmsg.setVisibility(View.INVISIBLE);

			}
			break;
		case R.id.rlSaveConstact:
			if (iv_switch_block_groupmsg.getVisibility() == View.VISIBLE) {
				iv_switch_block_groupmsg.setVisibility(View.INVISIBLE);
				iv_switch_unblock_groupmsg.setVisibility(View.VISIBLE);

			} else {

				iv_switch_block_groupmsg.setVisibility(View.VISIBLE);
				iv_switch_unblock_groupmsg.setVisibility(View.INVISIBLE);

			}
			break;
		case R.id.re_clear: // 清空聊天记录
			progressDialog.setMessage("正在清空群消息...");
			progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
			progressDialog.show();
			// 按照你们要求必须有个提示，防止记录太少，删得太快，不提示

			break;
		case R.id.re_change_groupname:

			break;
		case R.id.rl_switch_chattotop:
			// 当前状态是已经置顶,点击后取消置顶
			if (iv_switch_chattotop.getVisibility() == View.VISIBLE) {
				iv_switch_chattotop.setVisibility(View.INVISIBLE);
				iv_switch_unchattotop.setVisibility(View.VISIBLE);
			} else {
				// 当前状态是未置顶点击后置顶
				iv_switch_chattotop.setVisibility(View.VISIBLE);
				iv_switch_unchattotop.setVisibility(View.INVISIBLE);
			}
			break;

		case R.id.btn_exit_grp:

			break;

		default:
			break;
		}
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		mLocalBroadcastManager.unregisterReceiver(mReceiver);
	}
}
