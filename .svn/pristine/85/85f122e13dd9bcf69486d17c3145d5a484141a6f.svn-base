package com.weidi.adapter;

import java.io.File;
import java.text.DecimalFormat;

import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.util.StringUtils;

import android.os.Looper;
import android.text.SpannableStringBuilder;
import android.text.util.Linkify;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.weidi.QApp;
import com.weidi.activity.ChatActivity;
import com.weidi.adapter.NewChatAdapter.ViewHolderRecvText;
import com.weidi.adapter.NewChatAdapter.ViewHolderRecvVideo;
import com.weidi.adapter.NewChatAdapter.ViewHolderRecvVoice;
import com.weidi.adapter.NewChatAdapter.ViewHolderSentPicture;
import com.weidi.adapter.NewChatAdapter.ViewHolderSentText;
import com.weidi.adapter.NewChatAdapter.ViewHolderSentVideo;
import com.weidi.adapter.NewChatAdapter.ViewHolderSentVoice;
import com.weidi.bean.ChatItem;
import com.weidi.common.MediaFile;
import com.weidi.common.MediaInfo;
import com.weidi.common.MediaInfoProvider;
import com.weidi.common.UploadUtil;
import com.weidi.common.UploadUtil.UpCallback;
import com.weidi.common.image.ImageLoadCache;
import com.weidi.common.image.ImgConfig;
import com.weidi.db.ChatDao;
import com.weidi.util.Const;
import com.weidi.util.ExpressionUtil;
import com.weidi.util.Logger;
import com.weidi.util.ToastUtil;
import com.weidi.util.XmppUtil;
import com.weidi.view.CircleImageView;

/**
 * @author luochangdong E-mail: 2270333671@qq.com
 * @date 创建时间：2015-8-4 上午11:01:59
 * @Description 1.0
 */
public class ChatAdapterRepo {

	private static final String TAG = ChatAdapterRepo.class.getSimpleName();
	private static ChatAdapterRepo instance;
	ChatDao chatDao;

	public static ChatAdapterRepo getInstance() {
		if (instance == null) {
			instance = new ChatAdapterRepo();
		}
		return instance;
	}

	public ChatAdapterRepo() {
		chatDao = ChatDao.getInstance();
	}

	public void handleChatItem(ChatItem item, Object object) {
		switch (item.getViewTyep()) {
		case NewChatAdapter.MESSAGE_TYPE_RECV_TXT:
			handlRecvText(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_RECV_IMAGE:
			handleRecvImg(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_RECV_VIDEO:
			handleRecvVideo(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_RECV_VOICE:
			handleRecvVoice(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_SENT_TXT:
			handleSentText(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_SENT_IMAGE:
			handleSentImg(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_SENT_VIDEO:
			handleSendVideo(item, object);

			break;
		case NewChatAdapter.MESSAGE_TYPE_SENT_VOICE:
			handleSentVoice(item, object);

			break;

		default:
			break;
		}
	}

	private void handleRecvVoice(ChatItem item, Object object) {
		ViewHolderRecvVoice recvVoice = (ViewHolderRecvVoice) object;
		recvVoice.timestamp.setText(item.getDate());

		showRecvHead(recvVoice.userhead, recvVoice.nickname, item);
		if (item.getVoiceReaded() == 1) {
			recvVoice.unread.setVisibility(View.GONE);
		}
		MediaInfoProvider provider1 = new MediaInfoProvider(QApp.getInstance());
		MediaInfo info1 = provider1.getMediaInfo(item.getContent());
		recvVoice.length.setText(info1.getPlayDuration());
	}

	private void handleRecvVideo(ChatItem item, Object object) {
		ViewHolderRecvVideo recvVideo = (ViewHolderRecvVideo) object;
		recvVideo.timestamp.setText(item.getDate());
		showRecvHead(recvVideo.userhead, recvVideo.nickname, item);
		MediaInfoProvider provider = new MediaInfoProvider(QApp.getInstance());
		MediaInfo info = provider.getMediaInfo(item.getContent());
		recvVideo.size.setText(info.getmFileSize());
		recvVideo.lenght.setText(info.getPlayDuration());
		recvVideo.video.setImageBitmap(info.getmBitmap());
	}

	private void handleRecvImg(ChatItem item, Object object) {
		ViewHolderSentPicture recvImg = (ViewHolderSentPicture) object;
		showRecvHead(recvImg.userhead, recvImg.nickname, item);
		recvImg.timestamp.setText(item.getDate());
		ImageLoadCache.getBinnerBitmap(recvImg.picture, item.getContent());
	}

	private void handlRecvText(ChatItem item, Object object) {
		ViewHolderRecvText recvText = (ViewHolderRecvText) object;
		showRecvHead(recvText.userhead, recvText.nickname, item);
		SpannableStringBuilder sb = ExpressionUtil.prase(QApp.getInstance(),
				recvText.content, item.getContent());// 对内容做处理
		recvText.content.setText(sb);
		Linkify.addLinks(recvText.content, Linkify.ALL);// 增加文本链接类型
		recvText.timestamp.setText(item.getDate());

		recvText.timestamp.setText(item.getDate());
	}

	private void handleSentVoice(ChatItem item, Object object) {
		ViewHolderSentVoice sentVoice = (ViewHolderSentVoice) object;
		sentVoice.timestamp.setText(item.getDate());
		MediaInfoProvider provider1 = new MediaInfoProvider(QApp.getInstance());
		MediaInfo info1 = provider1.getMediaInfo(item.getContent());
		sentVoice.length.setText(info1.getPlayDuration());
		if (item.getFileStatus() == ChatItem.STATUS_0) {
			sentVoice.progressBar.setVisibility(View.VISIBLE);
			sendVoiceMsg(sentVoice, item);
		}
		if (item.getFileStatus() == ChatItem.STATUS_2) {
			sentVoice.status.setVisibility(View.VISIBLE);
		}
	}

	private void handleSendVideo(ChatItem item, Object object) {
		ViewHolderSentVideo sentVideo = (ViewHolderSentVideo) object;
		sentVideo.timestamp.setText(item.getDate());

		MediaInfoProvider provider = new MediaInfoProvider(QApp.getInstance());
		MediaInfo info = provider.getMediaInfo(item.getContent());
		sentVideo.size.setText(info.getmFileSize());
		sentVideo.lenght.setText(info.getPlayDuration());
		sentVideo.video.setImageBitmap(info.getmBitmap());
		if (item.getFileStatus() == ChatItem.STATUS_0) {
			sentVideo.progressBar.setVisibility(View.VISIBLE);
			sentVideoMsg(sentVideo, item);
		}
		if (item.getFileStatus() == ChatItem.STATUS_2) {
			sentVideo.status.setVisibility(View.VISIBLE);
		}
	}

	private void handleSentImg(ChatItem item, Object object) {
		ViewHolderSentPicture sentPicture = (ViewHolderSentPicture) object;
		sentPicture.timestamp.setText(item.getDate());
		ImageLoadCache.getBinnerBitmap(sentPicture.picture, item.getContent());
		if (item.getFileStatus() == ChatItem.STATUS_0) {
			sentPicture.progressBar.setVisibility(View.VISIBLE);
			sentPicMsg(sentPicture, item);
		}
		if (item.getFileStatus() == ChatItem.STATUS_2) {
			sentPicture.status.setVisibility(View.VISIBLE);
		}
	}

	private void handleSentText(ChatItem item, Object object) {
		ViewHolderSentText sentText = (ViewHolderSentText) object;

		SpannableStringBuilder sb = ExpressionUtil.prase(QApp.getInstance(),
				sentText.content, item.getContent());// 对内容做处理
		sentText.content.setText(sb);
		Linkify.addLinks(sentText.content, Linkify.ALL);// 增加文本链接类型
		sentText.timestamp.setText(item.getDate());

		sentText.timestamp.setText(item.getDate());

		if (item.getFileStatus() == ChatItem.STATUS_0) {
			sentText.progressBar.setVisibility(View.VISIBLE);
			sendTXTMsg(item, sentText);
		}
		if (item.getFileStatus() == ChatItem.STATUS_2) {
			sentText.status.setVisibility(View.VISIBLE);
		}
	}

	private void showRecvHead(CircleImageView head, TextView nick, ChatItem msg) {
		if (msg.getIsGroup() == 1) {
			head.setVisibility(View.VISIBLE);
			ImgConfig.showHeadImg(msg.getMuc(), head);
			nick.setText(msg.getUsernick());

		} else {
			head.setVisibility(View.GONE);
			nick.setText("");
		}
	}

	private void sendVoiceMsg(final ViewHolderSentVoice sentVoice,
			final ChatItem item) {
		final File file = new File(item.getContent());
		String date = com.weidi.common.DateUtil.getCurDateStr("yyyyMMddHHmmss");
		final String ext = UploadUtil.getExtensionName(file.getName());
		final StringBuilder fileName = new StringBuilder();
		if (item.getIsGroup() == 1) {
			fileName.append(StringUtils.parseName(item.getMuc()));
		} else {
			fileName.append(StringUtils.parseName(item.getTo()));
		}

		fileName.append(date);
		fileName.append(".");
		fileName.append(ext);
		final String upUrl;
		if (item.getIsGroup() == 1) {
			upUrl = upLoadUrl(StringUtils.parseName(item.getMuc()),
					fileName.toString());
		} else {
			upUrl = upLoadUrl(StringUtils.parseName(item.getTo()),
					fileName.toString());
		}

		new Thread(new Runnable() {

			@Override
			public void run() {
				UploadUtil.uploadFile(file, upUrl, new UpCallback() {

					@Override
					public void upSendMsg() {

						sendMsg(fileName.toString(), Const.MSG_TYPE_VOICE);
						chatDao.updateMsgStatus(item, "1");
						sentVoice.progressBar.setVisibility(View.GONE);

					}

					@Override
					public void onUploadProcess(int current, int total) {

					}

					@Override
					public void onLoadingFailed() {
						ToastUtil.showShortLuo("文件上传失败！");
						chatDao.updateMsgStatus(item, "2");
						sentVoice.status.setVisibility(View.VISIBLE);
					}
				});
			}
		}).start();
	}

	private void sentVideoMsg(final ViewHolderSentVideo sentVideo,
			final ChatItem item) {
		final File file = new File(item.getContent());
		String date = com.weidi.common.DateUtil.getCurDateStr("yyyyMMddHHmmss");
		final String ext = UploadUtil.getExtensionName(file.getName());
		final StringBuilder fileName = new StringBuilder();
		if (item.getIsGroup() == 1) {
			fileName.append(StringUtils.parseName(item.getMuc()));
		} else {
			fileName.append(StringUtils.parseName(item.getTo()));
		}

		fileName.append(date);
		fileName.append(".");
		fileName.append(ext);
		final String upUrl;
		if (item.getIsGroup() == 1) {
			upUrl = upLoadUrl(StringUtils.parseName(item.getMuc()),
					fileName.toString());
		} else {
			upUrl = upLoadUrl(StringUtils.parseName(item.getTo()),
					fileName.toString());
		}
		new Thread(new Runnable() {

			@Override
			public void run() {
				UploadUtil.uploadFile(file, upUrl, new UpCallback() {

					@Override
					public void upSendMsg() {

						sendMsg(fileName.toString(), Const.MSG_TYPE_VIDEO);
						chatDao.updateMsgStatus(item, "1");
						sentVideo.progressBar.setVisibility(View.GONE);
						sentVideo.llLoad.setVisibility(View.GONE);
					}

					@Override
					public void onUploadProcess(int current, int total) {
						if (current != 0 && current <= total) {
							float num = (float) current / total;
							DecimalFormat df = new DecimalFormat("0.00");// 格式化小数
							String s = df.format(num);// 返回的是String类型
							sentVideo.percentage.setText(s);
						}

					}

					@Override
					public void onLoadingFailed() {
						ToastUtil.showShortLuo("文件上传失败！");
						chatDao.updateMsgStatus(item, "2");
						sentVideo.status.setVisibility(View.VISIBLE);
					}
				});
			}
		}).start();
	}

	private void sentPicMsg(final ViewHolderSentPicture sentPicture2,
			final ChatItem item) {
		final File file = new File(item.getContent());
		String date = com.weidi.common.DateUtil.getCurDateStr("yyyyMMddHHmmss");
		final String ext = UploadUtil.getExtensionName(file.getName());
		final StringBuilder fileName = new StringBuilder();
		if (item.getIsGroup() == 1) {
			fileName.append(StringUtils.parseName(item.getMuc()));
		} else {
			fileName.append(StringUtils.parseName(item.getTo()));
		}

		fileName.append(date);
		fileName.append(".");
		fileName.append(ext);
		final String upUrl;
		if (item.getIsGroup() == 1) {
			upUrl = upLoadUrl(StringUtils.parseName(item.getMuc()),
					fileName.toString());
		} else {
			upUrl = upLoadUrl(StringUtils.parseName(item.getTo()),
					fileName.toString());
		}
		new Thread(new Runnable() {

			@Override
			public void run() {
				UploadUtil.uploadFile(file, upUrl, new UpCallback() {

					@Override
					public void upSendMsg() {

						sendMsg(fileName.toString(), Const.MSG_TYPE_IMG);
						chatDao.updateMsgStatus(item, "1");
						sentPicture2.progressBar.setVisibility(View.GONE);
						sentPicture2.llLoad.setVisibility(View.GONE);

					}

					@Override
					public void onUploadProcess(int current, int total) {
						if (current != 0 && current <= total) {
							float num = (float) current / total;
							DecimalFormat df = new DecimalFormat("0.00");// 格式化小数
							String s = df.format(num);// 返回的是String类型
							sentPicture2.percentage.setText(s);
						}

					}

					@Override
					public void onLoadingFailed() {
						ToastUtil.showShortLuo("文件上传失败！");
						chatDao.updateMsgStatus(item, "2");
					}
				});
			}
		}).start();

	}

	/**
	 * 上传路径URL
	 * 
	 * @param host
	 * @param userName
	 * @param fileName
	 * @return
	 */
	public String upLoadUrl(String userName, String fileName) {
		StringBuilder sb = new StringBuilder();
		sb.append("http://");
		sb.append(QApp.getXmppConnection().getHost() + ":9090");
		sb.append("/plugins/jsmfiles/fileupload?");
		sb.append("username=");
		sb.append(userName);
		sb.append("&filename=");
		sb.append(fileName);
		Logger.i(TAG, sb.toString());
		return sb.toString();
	}

	private void sendMsg(String fileName, String msgType) {

		try {

			XmppUtil.sendFileMsg(fileName, msgType, ChatActivity.YOU);

		} catch (XMPPException e) {
			e.printStackTrace();
			Looper.prepare();
			ToastUtil.showShortLuo("发送失败");
			Looper.loop();
		}
	}

	/**
	 * 执行发送消息 图片类型
	 * 
	 * @param content
	 */
	void sendMsgFile(final String filePath, final ChatItem item,
			final TextView percentage, final ProgressBar progressBar) {

		final File file = new File(filePath);

		String date = com.weidi.common.DateUtil.getCurDateStr("yyyyMMddHHmmss");
		final String ext = UploadUtil.getExtensionName(file.getName());
		final StringBuilder fileName = new StringBuilder();
		if (item.getIsGroup() == 1) {
			fileName.append(StringUtils.parseName(item.getMuc()));
		} else {
			fileName.append(StringUtils.parseName(item.getTo()));
		}

		fileName.append(date);
		fileName.append(".");
		fileName.append(ext);
		final String upUrl;
		if (item.getIsGroup() == 1) {
			upUrl = upLoadUrl(StringUtils.parseName(item.getMuc()),
					fileName.toString());
		} else {
			upUrl = upLoadUrl(StringUtils.parseName(item.getTo()),
					fileName.toString());
		}

		new Thread(new Runnable() {

			@Override
			public void run() {
				UploadUtil.uploadFile(file, upUrl, new UpCallback() {

					@Override
					public void upSendMsg() {
						if (MediaFile.isImageFileType(filePath)) {
							sendMsg(fileName.toString(), Const.MSG_TYPE_IMG);
						}
						if (ext.equals("amr")) {
							sendMsg(fileName.toString(), Const.MSG_TYPE_VOICE);
						}
						if (MediaFile.isVideoFileType(filePath)) {
							sendMsg(fileName.toString(), Const.MSG_TYPE_VIDEO);
						}
						chatDao.updateMsgStatus(item, "1");
						progressBar.setVisibility(View.GONE);
					}

					@Override
					public void onUploadProcess(int current, int total) {
						if (current != 0 && current <= total) {
							float num = (float) current / total;
							DecimalFormat df = new DecimalFormat("0.00");// 格式化小数
							String s = df.format(num);// 返回的是String类型
							percentage.setText(s);
						}

					}

					@Override
					public void onLoadingFailed() {
						ToastUtil.showShortLuo("文件上传失败！");
						chatDao.updateMsgStatus(item, "2");
					}
				});
			}
		}).start();

	}

	private void sendTXTMsg(ChatItem item, ViewHolderSentText sentText) {

		try {
			sentText.progressBar.setVisibility(View.VISIBLE);
			XmppUtil.sendTextMsg(item.getContent(), item.getFrom());
		} catch (XMPPException e) {
			e.printStackTrace();
			chatDao.updateMsgStatus(item, "2");
			sentText.status.setVisibility(View.VISIBLE);
		}
		chatDao.updateMsgStatus(item, "1");
		sentText.progressBar.setVisibility(View.GONE);
	}

}
