package com.weidi.adapter;


import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;

import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smackx.packet.VCard;

import android.content.Context;
import android.graphics.Bitmap;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import com.weidi.QApp;
import com.weidi.R;
import com.weidi.activity.VcardActivity;
import com.weidi.bean.Session;
import com.weidi.common.SortAdapter;
import com.weidi.util.Const;
import com.weidi.util.ExpressionUtil;
import com.weidi.view.CircleImageView;

public class SessionAdapter extends BaseAdapter {
	private Context mContext;
	private List<Session> lists;
	VCard vcard=new VCard();
	Bitmap bm;

	public SessionAdapter(Context context, List<Session> lists) {
		this.mContext = context;
		this.lists = lists;
	}

	@Override
	public int getCount() {
		if (lists != null) {
			return lists.size();
		}
		return 0;
	}

	@Override
	public Object getItem(int position) {
		return lists.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		final Holder holder;
		if (convertView == null) {
			convertView = View.inflate(mContext, R.layout.fragment_news_item,null);
			holder = new Holder();
			holder.iv = (CircleImageView) convertView.findViewById(R.id.user_head);
			holder.tv_name = (TextView) convertView.findViewById(R.id.user_name);
			holder.tv_tips = (TextView) convertView.findViewById(R.id.tips);
			holder.tv_content = (TextView) convertView.findViewById(R.id.content);
			holder.tv_time = (TextView) convertView.findViewById(R.id.tv_time);
			holder.tv_newmsg= (TextView) convertView.findViewById(R.id.tv_newmsg);
			convertView.setTag(holder);
		} else {
			holder = (Holder) convertView.getTag();
		}
		
		Session session = lists.get(position);
		if(session.getType().equals(Const.MSG_TYPE_ADD_FRIEND)){
			holder.tv_tips .setVisibility(View.VISIBLE);
			holder.iv.setImageResource(R.drawable.ibl);
			Log.i("TATTTTTTT", "来这里吗？");
		}else{
			holder.tv_tips.setVisibility(View.GONE);
		//	holder.iv.setImageResource(R.drawable.ic_launcher);
			XMPPConnection conn = QApp.xmppConnection;
			try {
				if(conn.isAuthenticated()){
					vcard.load(conn,session.getFrom()+"@"+conn.getServiceName());
					Log.i("TAGGG", "这个sessiion是谁"+session.getFrom());
					
					//这里是获取头像的
					String path="/sdcard/imageVCard/";
					String dirpath=path+session.getFrom()+".txt";
					File file2=new File(dirpath);
					Log.i("TAGGGG", "这个为空吗");
					byte[] vdata=vcard.getAvatar();
					Log.i("TTT", "这个不可能为空吧"+vdata);
					if(vdata==null){
						holder.iv.setImageResource(R.drawable.default_useravatar);
					}else{
						File file=new File(dirpath);
						if(!file.exists()){
							byte[] data3=SortAdapter.getbyte(dirpath,vdata);
							holder.iv.setImageBitmap(VcardActivity.getPicFromBytes(data3,null));
						}else{
							FileInputStream in=new FileInputStream(dirpath);
							byte[] buffer = new byte[1024];
							int len = -1;
							ByteArrayOutputStream outStream = new ByteArrayOutputStream();
							while ((len = in.read(buffer)) != -1) {
							    outStream.write(buffer, 0, len);
							}
							byte[] data = outStream.toByteArray();
							outStream.close();
							in.close();
							if(!new String(vdata).equals(new String(data))){
								byte[] data2=SortAdapter.getbyte(dirpath,vdata);
								holder.iv.setImageBitmap(VcardActivity.getPicFromBytes(data2,null));
							}else{
								holder.iv.setImageBitmap(VcardActivity.getPicFromBytes(data,null));
							}
						}
					}
				}	
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			/*byte[] myimg=vcard.getAvatar();
			if(myimg==null){
				holder.iv.setImageResource(R.drawable.default_useravatar);
			}else{
				Bitmap bm=VcardActivity.getPicFromBytes(myimg,null);
				holder.iv.setImageBitmap(bm);
				Log.i("RRRRRRRRRRRR", "可以来这里吗");
			}*/
		}	
		holder.tv_name.setText(session.getFrom());
		holder.tv_content.setText(ExpressionUtil.prase(mContext, holder.tv_content, session.getContent()==null?"":session.getContent()));
		holder.tv_time.setText(session.getTime());
		if(!TextUtils.isEmpty(session.getNotReadCount())&&Integer.parseInt(session.getNotReadCount())>0){
			holder.tv_newmsg.setVisibility(View.VISIBLE);
			holder.tv_newmsg.setText(session.getNotReadCount());
		}else{
			holder.tv_newmsg.setVisibility(View.GONE);
			holder.tv_newmsg.setText("");
		}
		return convertView;
	}

	class Holder {
		CircleImageView iv;
		TextView tv_name,tv_tips;
		TextView tv_content;
		TextView tv_time,tv_newmsg;
	}

}
