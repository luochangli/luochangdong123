package com.weidi.common;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.List;

import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smackx.packet.VCard;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.SectionIndexer;
import android.widget.TextView;

import com.weidi.QApp;
import com.weidi.R;
import com.weidi.activity.VcardActivity;
/**
 *@author  luochangdong  E-mail: 2270333671@qq.com
 *@date 创建时间：2015-6-8 下午5:19:17
 *@Description 1.0 
 */
public class SortAdapter extends BaseAdapter implements SectionIndexer {
	private List<SortModel> list = null;
	private Context mContext;
	VCard vcard=new VCard();
	FileOutputStream out;
	Bitmap bm;

	public SortAdapter(Context mContext, List<SortModel> list) {
		this.mContext = mContext;
		this.list = list;
		
	}

	/**
	 * 当ListView数据发生变化时,调用此方法来更新ListView
	 * 
	 * @param list
	 */
	public void updateListView(List<SortModel> list) {
		this.list = list;
		notifyDataSetChanged();
	}

	public int getCount() {
		return this.list.size();
	}

	public Object getItem(int position) {
		return list.get(position);
	}

	public long getItemId(int position) {
		return position;
	}

	public View getView(final int position, View view, ViewGroup arg2) {
		ViewHolder viewHolder = null;
		final SortModel mContent = list.get(position);
		if (view == null) {
			viewHolder = new ViewHolder();
			view = LayoutInflater.from(mContext).inflate(R.layout.item_sort_listview, null);
			viewHolder.tvTitle = (TextView) view.findViewById(R.id.title);
			viewHolder.ivHeader = (ImageView) view.findViewById(R.id.iv_head_img);
			viewHolder.tvLetter = (TextView) view.findViewById(R.id.catalog);
			viewHolder.ivHeader=(ImageView)view.findViewById(R.id.iv_head_img);
			view.setTag(viewHolder);
		} else {
			viewHolder = (ViewHolder) view.getTag();
		}

		// 根据position获取分类的首字母的Char ascii值
		int section = getSectionForPosition(position);

		// 如果当前位置等于该分类首字母的Char的位置 ，则认为是第一次出现
		if (position == getPositionForSection(section)) {
			viewHolder.tvLetter.setVisibility(View.VISIBLE);
			viewHolder.tvLetter.setText(mContent.getSortLetters());
		} else {
			viewHolder.tvLetter.setVisibility(View.GONE);
		}

		viewHolder.tvTitle.setText(this.list.get(position).getName());
		
		XMPPConnection conn = QApp.xmppConnection;
		try {
			//this.list.get(position).getName()这个为微迪号
			vcard.load(conn, this.list.get(position).getName()+"@"+conn.getServiceName());
		} catch (XMPPException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String path="/sdcard/imageVCard/";
		String dirpath=path+this.list.get(position).getName()+".txt";
		Log.i("HHHHH", "开始创建文件");
		//判断文件夹是不是存在,在MainActivity已经做判断
		/*File file =new File(path);
		if(!file.exists()){
			file.mkdirs();
			Log.i("HHHHH", "创建文件夹成功");
		}*/
		//判断文件是不是存在
		File file2=new File(dirpath);
        try {
			
			byte[] vdata=vcard.getAvatar();
			Log.i("TTT", "这个不可能为空吧"+vdata);
			if(vdata==null){
				viewHolder.ivHeader.setImageResource(R.drawable.default_useravatar);
			}else{
				File file=new File(dirpath);
				if(!file.exists()){
					byte[] data3=SortAdapter.getbyte(dirpath,vdata);
					viewHolder.ivHeader.setImageBitmap(VcardActivity.getPicFromBytes(data3,null));
				}else{
					FileInputStream in=new FileInputStream(dirpath);
					byte[] buffer = new byte[1024];
					int len = -1;
					ByteArrayOutputStream outStream = new ByteArrayOutputStream();
					while ((len = in.read(buffer)) != -1) {
					    outStream.write(buffer, 0, len);
					}
					byte[] data = outStream.toByteArray();
					outStream.close();
					in.close();
					if(!new String(vdata).equals(new String(data))){
						byte[] data2=SortAdapter.getbyte(dirpath,vdata);
						viewHolder.ivHeader.setImageBitmap(VcardActivity.getPicFromBytes(data2,null));
					}else{
						viewHolder.ivHeader.setImageBitmap(VcardActivity.getPicFromBytes(data,null));
					}
				}
			}
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
			/*Bitmap bm=VcardActivity.getPicFromBytes(myimg,null);
			viewHolder.ivHeader.setImageBitmap(bm);
			Log.i("RRRRRRRRRRRR", "可以来这里吗");*/
		
		
		return view;

	}
	
	
	public static byte[] getbyte(String path,byte[] myimg){
		FileInputStream in2=null;
		ByteArrayOutputStream outStream2=null;
		byte[] data2=null;
		try {
			FileOutputStream out=new FileOutputStream(path);
			out.write(myimg);
			in2 = new FileInputStream(path);
			byte[] buffer2 = new byte[1024];
			int len2 = -1;
			outStream2 = new ByteArrayOutputStream();
			while ((len2 = in2.read(buffer2)) != -1) {
			    outStream2.write(buffer2, 0, len2);
			}
			data2 = outStream2.toByteArray();
			outStream2.close();
		    in2.close();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return data2;
	}

	final static class ViewHolder {
		TextView tvLetter;
		TextView tvTitle;
		ImageView ivHeader;
	}

	/**
	 * 根据ListView的当前位置获取分类的首字母的Char ascii值
	 */
	public int getSectionForPosition(int position) {
		return list.get(position).getSortLetters().charAt(0);
	}

	/**
	 * 根据分类的首字母的Char ascii值获取其第一次出现该首字母的位置
	 */
	public int getPositionForSection(int section) {
		for (int i = 0; i < getCount(); i++) {
			String sortStr = list.get(i).getSortLetters();
			char firstChar = sortStr.toUpperCase().charAt(0);
			if (firstChar == section) {
				return i;
			}
		}

		return -1;
	}

	/**
	 * 提取英文的首字母，非英文字母用#代替。
	 * 
	 * @param str
	 * @return
	 */
	private String getAlpha(String str) {
		String sortStr = str.trim().substring(0, 1).toUpperCase();
		// 正则表达式，判断首字母是否是英文字母
		if (sortStr.matches("[A-Z]")) {
			return sortStr;
		} else {
			return "#";
		}
	}

	@Override
	public Object[] getSections() {
		return null;
	}
}